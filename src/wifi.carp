(relative-include "wifi.h")

(defmodule Wifi
  (private set-mode-c)
  (register set-mode-c (Fn [Int] ()) "WifiSetMode")

  (private begin-c)
  (register begin-c (Fn [(Ptr Char) (Ptr Char)] Int) "WifiBegin")

  (private get-status-c)
  (register get-status-c (Fn [] Int) "WifiGetStatus")

  (register scan-network (Fn [] Int) "WifiScanNetwork")
  (register get-ssid (Fn [Int] String) "WifiGetSSID")
  (register get-local-ip (Fn [] String) "WifiGetLocalIP")
  (register disconnect (Fn [] ()) "WifiDisconnect")

  (deftype WifiMode Off Station Ap ApStation)

  (defn set-mode [mode]
    (set-mode-c (match (the WifiMode mode)
                  WifiMode.Off 0
                  WifiMode.Station 1
                  WifiMode.Ap 2
                  WifiMode.ApStation 3)))

  (deftype WifiStatus
    NoShield
    IdleStatus
    NoSsidAvailable
    ScanCompleted
    Connected
    ConnectionFailed
    ConnectionLost
    Disconnected
    Unknown)

  (private match-int-to-wifi-status)
  (defn match-int-to-wifi-status [int]
    (case (the Int int)
        255 (WifiStatus.NoShield)
        0   (WifiStatus.IdleStatus)
        1   (WifiStatus.NoSsidAvailable)
        2   (WifiStatus.ScanCompleted)
        3   (WifiStatus.Connected)
        4   (WifiStatus.ConnectionFailed)
        5   (WifiStatus.ConnectionLost)
        6   (WifiStatus.Disconnected)
            (WifiStatus.Unknown)))

  (defn begin [ssid pass]
    (match-int-to-wifi-status (begin-c (cstr ssid) (cstr pass))))

  (defn get-status []
    (match-int-to-wifi-status (get-status-c))))

